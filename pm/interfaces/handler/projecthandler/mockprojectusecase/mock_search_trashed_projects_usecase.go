// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/projectusecase/search_trashed_projects_usecase.go

// Package mockprojectusecase is a generated GoMock package.
package mockprojectusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	projectinput "github.com/onituka/agile-project-management/project-management/usecase/projectusecase/projectinput"
	projectoutput "github.com/onituka/agile-project-management/project-management/usecase/projectusecase/projectoutput"
)

// MockSearchTrashedProjectsUsecase is a mock of SearchTrashedProjectsUsecase interface.
type MockSearchTrashedProjectsUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSearchTrashedProjectsUsecaseMockRecorder
}

// MockSearchTrashedProjectsUsecaseMockRecorder is the mock recorder for MockSearchTrashedProjectsUsecase.
type MockSearchTrashedProjectsUsecaseMockRecorder struct {
	mock *MockSearchTrashedProjectsUsecase
}

// NewMockSearchTrashedProjectsUsecase creates a new mock instance.
func NewMockSearchTrashedProjectsUsecase(ctrl *gomock.Controller) *MockSearchTrashedProjectsUsecase {
	mock := &MockSearchTrashedProjectsUsecase{ctrl: ctrl}
	mock.recorder = &MockSearchTrashedProjectsUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchTrashedProjectsUsecase) EXPECT() *MockSearchTrashedProjectsUsecaseMockRecorder {
	return m.recorder
}

// SearchTrashedProjects mocks base method.
func (m *MockSearchTrashedProjectsUsecase) SearchTrashedProjects(ctx context.Context, in *projectinput.SearchTrashedProjectsInput) (*projectoutput.SearchTrashedProjectsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchTrashedProjects", ctx, in)
	ret0, _ := ret[0].(*projectoutput.SearchTrashedProjectsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchTrashedProjects indicates an expected call of SearchTrashedProjects.
func (mr *MockSearchTrashedProjectsUsecaseMockRecorder) SearchTrashedProjects(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchTrashedProjects", reflect.TypeOf((*MockSearchTrashedProjectsUsecase)(nil).SearchTrashedProjects), ctx, in)
}
