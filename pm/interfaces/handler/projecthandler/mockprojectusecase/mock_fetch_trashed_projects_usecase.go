// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/projectusecase/fetch_trashed_projects_usecase.go

// Package mockprojectusecase is a generated GoMock package.
package mockprojectusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	projectinput "github.com/onituka/agile-project-management/project-management/usecase/projectusecase/projectinput"
	projectoutput "github.com/onituka/agile-project-management/project-management/usecase/projectusecase/projectoutput"
)

// MockFetchTrashedProjectsUsecase is a mock of FetchTrashedProjectsUsecase interface.
type MockFetchTrashedProjectsUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockFetchTrashedProjectsUsecaseMockRecorder
}

// MockFetchTrashedProjectsUsecaseMockRecorder is the mock recorder for MockFetchTrashedProjectsUsecase.
type MockFetchTrashedProjectsUsecaseMockRecorder struct {
	mock *MockFetchTrashedProjectsUsecase
}

// NewMockFetchTrashedProjectsUsecase creates a new mock instance.
func NewMockFetchTrashedProjectsUsecase(ctrl *gomock.Controller) *MockFetchTrashedProjectsUsecase {
	mock := &MockFetchTrashedProjectsUsecase{ctrl: ctrl}
	mock.recorder = &MockFetchTrashedProjectsUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetchTrashedProjectsUsecase) EXPECT() *MockFetchTrashedProjectsUsecaseMockRecorder {
	return m.recorder
}

// FetchTrashedProjects mocks base method.
func (m *MockFetchTrashedProjectsUsecase) FetchTrashedProjects(ctx context.Context, in *projectinput.FetchTrashedProjectsInput) (*projectoutput.FetchTrashedProjectsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchTrashedProjects", ctx, in)
	ret0, _ := ret[0].(*projectoutput.FetchTrashedProjectsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchTrashedProjects indicates an expected call of FetchTrashedProjects.
func (mr *MockFetchTrashedProjectsUsecaseMockRecorder) FetchTrashedProjects(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchTrashedProjects", reflect.TypeOf((*MockFetchTrashedProjectsUsecase)(nil).FetchTrashedProjects), ctx, in)
}
