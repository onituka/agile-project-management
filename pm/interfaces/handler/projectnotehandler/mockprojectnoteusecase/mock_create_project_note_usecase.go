// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/projectnoteusecase/create_project_note_usecase.go

// Package mockprojectnoteusecase is a generated GoMock package.
package mockprojectnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	projectnoteinput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteinput"
	projectnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteoutput"
)

// MockCreateProjectNoteUsecase is a mock of CreateProjectNoteUsecase interface.
type MockCreateProjectNoteUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockCreateProjectNoteUsecaseMockRecorder
}

// MockCreateProjectNoteUsecaseMockRecorder is the mock recorder for MockCreateProjectNoteUsecase.
type MockCreateProjectNoteUsecaseMockRecorder struct {
	mock *MockCreateProjectNoteUsecase
}

// NewMockCreateProjectNoteUsecase creates a new mock instance.
func NewMockCreateProjectNoteUsecase(ctrl *gomock.Controller) *MockCreateProjectNoteUsecase {
	mock := &MockCreateProjectNoteUsecase{ctrl: ctrl}
	mock.recorder = &MockCreateProjectNoteUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateProjectNoteUsecase) EXPECT() *MockCreateProjectNoteUsecaseMockRecorder {
	return m.recorder
}

// CreateProjectNote mocks base method.
func (m *MockCreateProjectNoteUsecase) CreateProjectNote(ctx context.Context, in *projectnoteinput.CreateProjectNoteInput) (*projectnoteoutput.CreateProjectNoteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProjectNote", ctx, in)
	ret0, _ := ret[0].(*projectnoteoutput.CreateProjectNoteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProjectNote indicates an expected call of CreateProjectNote.
func (mr *MockCreateProjectNoteUsecaseMockRecorder) CreateProjectNote(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProjectNote", reflect.TypeOf((*MockCreateProjectNoteUsecase)(nil).CreateProjectNote), ctx, in)
}
