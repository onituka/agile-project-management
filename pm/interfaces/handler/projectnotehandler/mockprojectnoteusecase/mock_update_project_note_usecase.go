// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/projectnoteusecase/update_project_note_usecase.go

// Package mockprojectnoteusecase is a generated GoMock package.
package mockprojectnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	projectnoteinput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteinput"
	projectnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteoutput"
)

// MockUpdateProjectNoteUsecase is a mock of UpdateProjectNoteUsecase interface.
type MockUpdateProjectNoteUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUpdateProjectNoteUsecaseMockRecorder
}

// MockUpdateProjectNoteUsecaseMockRecorder is the mock recorder for MockUpdateProjectNoteUsecase.
type MockUpdateProjectNoteUsecaseMockRecorder struct {
	mock *MockUpdateProjectNoteUsecase
}

// NewMockUpdateProjectNoteUsecase creates a new mock instance.
func NewMockUpdateProjectNoteUsecase(ctrl *gomock.Controller) *MockUpdateProjectNoteUsecase {
	mock := &MockUpdateProjectNoteUsecase{ctrl: ctrl}
	mock.recorder = &MockUpdateProjectNoteUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdateProjectNoteUsecase) EXPECT() *MockUpdateProjectNoteUsecaseMockRecorder {
	return m.recorder
}

// UpdateProjectNote mocks base method.
func (m *MockUpdateProjectNoteUsecase) UpdateProjectNote(ctx context.Context, in *projectnoteinput.UpdateProjectNoteInput) (*projectnoteoutput.UpdateProjectNoteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProjectNote", ctx, in)
	ret0, _ := ret[0].(*projectnoteoutput.UpdateProjectNoteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProjectNote indicates an expected call of UpdateProjectNote.
func (mr *MockUpdateProjectNoteUsecaseMockRecorder) UpdateProjectNote(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProjectNote", reflect.TypeOf((*MockUpdateProjectNoteUsecase)(nil).UpdateProjectNote), ctx, in)
}
