// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/projectnoteusecase/fetch_project_note_by_id_usecase.go

// Package mockprojectnoteusecase is a generated GoMock package.
package mockprojectnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	projectnoteinput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteinput"
	projectnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteoutput"
)

// MockFetchProjectNoteByIDUsecase is a mock of FetchProjectNoteByIDUsecase interface.
type MockFetchProjectNoteByIDUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockFetchProjectNoteByIDUsecaseMockRecorder
}

// MockFetchProjectNoteByIDUsecaseMockRecorder is the mock recorder for MockFetchProjectNoteByIDUsecase.
type MockFetchProjectNoteByIDUsecaseMockRecorder struct {
	mock *MockFetchProjectNoteByIDUsecase
}

// NewMockFetchProjectNoteByIDUsecase creates a new mock instance.
func NewMockFetchProjectNoteByIDUsecase(ctrl *gomock.Controller) *MockFetchProjectNoteByIDUsecase {
	mock := &MockFetchProjectNoteByIDUsecase{ctrl: ctrl}
	mock.recorder = &MockFetchProjectNoteByIDUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetchProjectNoteByIDUsecase) EXPECT() *MockFetchProjectNoteByIDUsecaseMockRecorder {
	return m.recorder
}

// FetchProjectNoteByID mocks base method.
func (m *MockFetchProjectNoteByIDUsecase) FetchProjectNoteByID(ctx context.Context, in *projectnoteinput.FetchProjectNoteByIDInput) (*projectnoteoutput.FetchProjectNoteByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchProjectNoteByID", ctx, in)
	ret0, _ := ret[0].(*projectnoteoutput.FetchProjectNoteByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchProjectNoteByID indicates an expected call of FetchProjectNoteByID.
func (mr *MockFetchProjectNoteByIDUsecaseMockRecorder) FetchProjectNoteByID(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchProjectNoteByID", reflect.TypeOf((*MockFetchProjectNoteByIDUsecase)(nil).FetchProjectNoteByID), ctx, in)
}
