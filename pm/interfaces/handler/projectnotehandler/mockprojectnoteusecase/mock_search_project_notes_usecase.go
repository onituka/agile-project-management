// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/projectnoteusecase/search_project_notes_usecase.go

// Package mockprojectnoteusecase is a generated GoMock package.
package mockprojectnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	projectnoteinput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteinput"
	projectnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/projectnoteusecase/projectnoteoutput"
)

// MockSearchProjectNotesUsecase is a mock of SearchProjectNotesUsecase interface.
type MockSearchProjectNotesUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSearchProjectNotesUsecaseMockRecorder
}

// MockSearchProjectNotesUsecaseMockRecorder is the mock recorder for MockSearchProjectNotesUsecase.
type MockSearchProjectNotesUsecaseMockRecorder struct {
	mock *MockSearchProjectNotesUsecase
}

// NewMockSearchProjectNotesUsecase creates a new mock instance.
func NewMockSearchProjectNotesUsecase(ctrl *gomock.Controller) *MockSearchProjectNotesUsecase {
	mock := &MockSearchProjectNotesUsecase{ctrl: ctrl}
	mock.recorder = &MockSearchProjectNotesUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchProjectNotesUsecase) EXPECT() *MockSearchProjectNotesUsecaseMockRecorder {
	return m.recorder
}

// SearchProjectNotes mocks base method.
func (m *MockSearchProjectNotesUsecase) SearchProjectNotes(ctx context.Context, in *projectnoteinput.SearchProjectNotesInput) (*projectnoteoutput.SearchProjectNotesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchProjectNotes", ctx, in)
	ret0, _ := ret[0].(*projectnoteoutput.SearchProjectNotesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchProjectNotes indicates an expected call of SearchProjectNotes.
func (mr *MockSearchProjectNotesUsecaseMockRecorder) SearchProjectNotes(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchProjectNotes", reflect.TypeOf((*MockSearchProjectNotesUsecase)(nil).SearchProjectNotes), ctx, in)
}
