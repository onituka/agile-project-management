// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/productnoteusecase/fetch_product_notes_usecase.go

// Package mockproductnoteusecase is a generated GoMock package.
package mockproductnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	productnoteinput "github.com/onituka/agile-project-management/project-management/usecase/productnoteusecase/productnoteinput"
	productnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/productnoteusecase/productnoteoutput"
)

// MockFetchProductNotesUsecase is a mock of FetchProductNotesUsecase interface.
type MockFetchProductNotesUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockFetchProductNotesUsecaseMockRecorder
}

// MockFetchProductNotesUsecaseMockRecorder is the mock recorder for MockFetchProductNotesUsecase.
type MockFetchProductNotesUsecaseMockRecorder struct {
	mock *MockFetchProductNotesUsecase
}

// NewMockFetchProductNotesUsecase creates a new mock instance.
func NewMockFetchProductNotesUsecase(ctrl *gomock.Controller) *MockFetchProductNotesUsecase {
	mock := &MockFetchProductNotesUsecase{ctrl: ctrl}
	mock.recorder = &MockFetchProductNotesUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetchProductNotesUsecase) EXPECT() *MockFetchProductNotesUsecaseMockRecorder {
	return m.recorder
}

// FetchProductNotes mocks base method.
func (m *MockFetchProductNotesUsecase) FetchProductNotes(ctx context.Context, in *productnoteinput.FetchProductNotesInput) (*productnoteoutput.FetchProductNotesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchProductNotes", ctx, in)
	ret0, _ := ret[0].(*productnoteoutput.FetchProductNotesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchProductNotes indicates an expected call of FetchProductNotes.
func (mr *MockFetchProductNotesUsecaseMockRecorder) FetchProductNotes(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchProductNotes", reflect.TypeOf((*MockFetchProductNotesUsecase)(nil).FetchProductNotes), ctx, in)
}
