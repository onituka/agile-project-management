// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/productnoteusecase/update_product_note_usecase.go

// Package mockproductnoteusecase is a generated GoMock package.
package mockproductnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	productnoteinput "github.com/onituka/agile-project-management/project-management/usecase/productnoteusecase/productnoteinput"
	productnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/productnoteusecase/productnoteoutput"
)

// MockUpdateProductNoteUsecase is a mock of UpdateProductNoteUsecase interface.
type MockUpdateProductNoteUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUpdateProductNoteUsecaseMockRecorder
}

// MockUpdateProductNoteUsecaseMockRecorder is the mock recorder for MockUpdateProductNoteUsecase.
type MockUpdateProductNoteUsecaseMockRecorder struct {
	mock *MockUpdateProductNoteUsecase
}

// NewMockUpdateProductNoteUsecase creates a new mock instance.
func NewMockUpdateProductNoteUsecase(ctrl *gomock.Controller) *MockUpdateProductNoteUsecase {
	mock := &MockUpdateProductNoteUsecase{ctrl: ctrl}
	mock.recorder = &MockUpdateProductNoteUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdateProductNoteUsecase) EXPECT() *MockUpdateProductNoteUsecaseMockRecorder {
	return m.recorder
}

// UpdateProductNote mocks base method.
func (m *MockUpdateProductNoteUsecase) UpdateProductNote(ctx context.Context, in *productnoteinput.UpdateProductNoteInput) (*productnoteoutput.UpdateProductNoteOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProductNote", ctx, in)
	ret0, _ := ret[0].(*productnoteoutput.UpdateProductNoteOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateProductNote indicates an expected call of UpdateProductNote.
func (mr *MockUpdateProductNoteUsecaseMockRecorder) UpdateProductNote(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProductNote", reflect.TypeOf((*MockUpdateProductNoteUsecase)(nil).UpdateProductNote), ctx, in)
}
