// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/productnoteusecase/search_product_notes_usecase.go

// Package mockproductnoteusecase is a generated GoMock package.
package mockproductnoteusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	productnoteinput "github.com/onituka/agile-project-management/project-management/usecase/productnoteusecase/productnoteinput"
	productnoteoutput "github.com/onituka/agile-project-management/project-management/usecase/productnoteusecase/productnoteoutput"
)

// MockSearchProductNotesUsecase is a mock of SearchProductNotesUsecase interface.
type MockSearchProductNotesUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSearchProductNotesUsecaseMockRecorder
}

// MockSearchProductNotesUsecaseMockRecorder is the mock recorder for MockSearchProductNotesUsecase.
type MockSearchProductNotesUsecaseMockRecorder struct {
	mock *MockSearchProductNotesUsecase
}

// NewMockSearchProductNotesUsecase creates a new mock instance.
func NewMockSearchProductNotesUsecase(ctrl *gomock.Controller) *MockSearchProductNotesUsecase {
	mock := &MockSearchProductNotesUsecase{ctrl: ctrl}
	mock.recorder = &MockSearchProductNotesUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchProductNotesUsecase) EXPECT() *MockSearchProductNotesUsecaseMockRecorder {
	return m.recorder
}

// SearchProductNotes mocks base method.
func (m *MockSearchProductNotesUsecase) SearchProductNotes(ctx context.Context, in *productnoteinput.SearchProductNotesInput) (*productnoteoutput.SearchProductNotesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchProductNotes", ctx, in)
	ret0, _ := ret[0].(*productnoteoutput.SearchProductNotesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchProductNotes indicates an expected call of SearchProductNotes.
func (mr *MockSearchProductNotesUsecaseMockRecorder) SearchProductNotes(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchProductNotes", reflect.TypeOf((*MockSearchProductNotesUsecase)(nil).SearchProductNotes), ctx, in)
}
