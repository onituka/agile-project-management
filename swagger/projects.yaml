openapi: "3.0.3"

servers:
  - url: "http://localhost:8080"
    description: "localhost"

info:
  title: "プロジェクト管理"
  version: "1.0.0"

paths:
  /projects:
    post:
      summary: "プロジェクト作成"
      tags: [ Project ]
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProjectReq"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostProjectResp"
        400:
          description: "BadRequest"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        409:
          description: "NotFound"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Conflict"
        500:
          description: "InternalServerError"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

  /projects/{projectID}:
    put:
      summary: "プロジェクト更新"
      tags: [ Project ]
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutProjectReq"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutProjectResp"
        400:
          description: "BadRequest"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: "NotFound"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        409:
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Conflict"
        500:
          description: "InternalServerError"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

    get:
      summary: "プロジェクト詳細取得"
      tags: [ Project ]
      description: ""
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProjectByIDResp"
        400:
          description: "BadRequest"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: "NotFound"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        500:
          description: "InternalServerError"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

components:
  schemas:
    # request body schema
    PostProjectReq:
      title: "PostProjectReq"
      properties:
        productID:
          type: "string"
          description: 'プロダクトID'
          example: "4495c574-34c2-4fb3-9ca4-3a7c79c267a6"
        groupID:
          type: "string"
          description: 'グループID'
          example: "024d78d6-1d03-11ec-a478-0242ac180002"
        keyName:
          type: "string"
          description: 'プロジェクトキー名'
          example: "AJA"
        name:
          type: "string"
          description: 'プロジェクト名'
          example: "プロジェクトサービス"
        leaderID:
          type: "string"
          description: 'プロジェクトリーダーID'
          example: "024d78d6-1d03-11ec-a478-0242ac184402"
        defaultAssigneeID:
          type: "string"
          description: 'デフォルトタスク担当者ID'
          example: "024d78d6-1d03-11ec-a478-9242ac180002"

    PutProjectReq:
      title: "PutProjectReq"
      properties:
        keyName:
          type: "string"
          description: 'プロジェクトキー名'
          example: "AJA"
        name:
          type: "string"
          description: 'プロジェクト名'
          example: "プロジェクトサービス"
        leaderID:
          type: "string"
          description: 'プロジェクトリーダーID'
          example: "024d78d6-1d03-11ec-a478-0242ac184402"
        defaultAssigneeID:
          type: "string"
          description: 'デフォルトタスク担当者ID'
          example: "024d78d6-1d03-11ec-a478-9242ac180002"

    # response body schema
    PostProjectResp:
      title: "PostProjectResp"
      properties:
        id:
          type: "string"
          description: 'プロジェクトID'
          example: "024d71d6-1d03-11ec-a478-0242ac180002"
        productID:
          type: "string"
          description: 'プロダクトID'
          example: "4495c574-34c2-4fb3-9ca4-3a7c79c267a6"
        groupID:
          type: "string"
          description: 'グループID'
          example: "024d78d6-1d03-11ec-a478-0242ac180002"
        keyName:
          type: "string"
          description: 'プロジェクトキー名'
          example: "AJA"
        name:
          type: "string"
          description: 'プロジェクト名'
          example: "プロジェクトサービス"
        leaderID:
          type: "string"
          description: 'プロジェクトリーダーID'
          example: "024d78d6-1d03-11ec-a478-0242ac184402"
        defaultAssigneeID:
          type: "string"
          description: 'デフォルトタスク担当者ID'
          example: "024d78d6-1d03-11ec-a478-9242ac180002"
        createdAt:
          type: "string"
          description: '作成日'
          example: "2021-12-24T00:00:00Z"
        updatedAt:
          type: "string"
          description: '更新日'
          example: '2021-12-24T00:00:00Z'

    PutProjectResp:
      title: "PutProjectResp"
      properties:
        id:
          type: "string"
          description: 'プロジェクトID'
          example: "024d71d6-1d03-11ec-a478-0242ac180002"
        productID:
          type: "string"
          description: 'プロダクトID'
          example: "4495c574-34c2-4fb3-9ca4-3a7c79c267a6"
        groupID:
          type: "string"
          description: 'グループID'
          example: "024d78d6-1d03-11ec-a478-0242ac180002"
        keyName:
          type: "string"
          description: 'プロジェクトキー名'
          example: "AJA"
        name:
          type: "string"
          description: 'プロジェクト名'
          example: "プロジェクトサービス"
        leaderID:
          type: "string"
          description: 'プロジェクトリーダーID'
          example: "024d78d6-1d03-11ec-a478-0242ac184402"
        defaultAssigneeID:
          type: "string"
          description: 'デフォルトタスク担当者ID'
          example: "024d78d6-1d03-11ec-a478-9242ac180002"
        createdAt:
          type: "string"
          description: '作成日'
          example: "2021-12-24T00:00:00Z"
        updatedAt:
          type: "string"
          description: '更新日'
          example: '2021-12-24T00:00:00Z'

    GetProjectByIDResp:
      title: "PutProjectResp"
      properties:
        id:
          type: "string"
          description: 'プロジェクトID'
          example: "024d71d6-1d03-11ec-a478-0242ac180002"
        productID:
          type: "string"
          description: 'プロダクトID'
          example: "4495c574-34c2-4fb3-9ca4-3a7c79c267a6"
        groupID:
          type: "string"
          description: 'グループID'
          example: "024d78d6-1d03-11ec-a478-0242ac180002"
        keyName:
          type: "string"
          description: 'プロジェクトキー名'
          example: "AJA"
        name:
          type: "string"
          description: 'プロジェクト名'
          example: "プロジェクトサービス"
        leaderID:
          type: "string"
          description: 'プロジェクトリーダーID'
          example: "024d78d6-1d03-11ec-a478-0242ac184402"
        defaultAssigneeID:
          type: "string"
          description: 'デフォルトタスク担当者ID'
          example: "024d78d6-1d03-11ec-a478-9242ac180002"
        createdAt:
          type: "string"
          description: '作成日'
          example: "2021-12-24T00:00:00Z"
        updatedAt:
          type: "string"
          description: '更新日'
          example: '2021-12-24T00:00:00Z'

    # error response body schema
    400BadRequest:
      description: "BadRequest"
      type: "object"
      properties:
        error:
          type: "string"
          enum:
            - "InvalidParameter"

    404NotFound:
      description: "NotFound"
      type: "object"
      properties:
        error:
          type: "string"
          enum:
            - "NotFound"

    409Conflict:
      description: "Conflict"
      type: "object"
      properties:
        error:
          type: "string"
          enum:
            - "Conflict"

    500InternalServerError:
      description: "InternalServerError"
      type: "object"
      properties:
        error:
          type: "string"
          enum:
            - "InternalServerError"
