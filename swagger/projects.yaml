openapi: 3.0.3

servers:
  - url: http://localhost:8080
    description: localhost

info:
  title: プロジェクト管理
  version: 1.0.0

paths:
  /products/{productID}/projects:
    post:
      summary: プロジェクト作成
      tags: [ Project ]
      parameters:
        - in: path
          name: productID
          required: true
          schema:
            type: string
            format: uuid
            example: afb71541-0b71-4e03-9fdd-2a64f49e14d2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postProjectReq"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postProjectResp"
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        409:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Conflict"
        500:
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

    get:
      summary: プロジェクト一覧取得
      tags: [ Project ]
      parameters:
        - in: path
          name: productID
          required: true
          schema:
            type: string
            format: uuid
            example: afb71541-0b71-4e03-9fdd-2a64f49e14d2
        - in: query
          name: page
          description: 取得ページ
          required: true
          schema:
            type: integer
            minimum: 1
            exclusiveMaximum: true
            example: 1
        - in: query
          name: limit
          description: 1ページあたりの取得数
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 50
            example: 50
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getProjectsResp"
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        500:
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

  /products/{productID}/projects/{projectID}:
    put:
      summary: プロジェクト更新
      tags: [ Project ]
      parameters:
        - in: path
          name: productID
          required: true
          schema:
            type: string
            format: uuid
            example: afb71541-0b71-4e03-9fdd-2a64f49e14d2
        - in: path
          name: projectID
          required: true
          schema:
            type: string
            format: uuid
            example: 35494ebc-ef1b-46b5-9c7f-35059feff8b8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putProjectReq"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/putProjectResp"
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Conflict"
        500:
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

    get:
      summary: プロジェクト詳細取得
      tags: [ Project ]
      parameters:
        - in: path
          name: productID
          required: true
          schema:
            type: string
            format: uuid
            example: afb71541-0b71-4e03-9fdd-2a64f49e14d2
        - in: path
          name: projectID
          required: true
          schema:
            type: string
            format: uuid
            example: 35494ebc-ef1b-46b5-9c7f-35059feff8b8
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getProjectByIDResp"
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        500:
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

  /products/{productID}/projects/search:
    get:
      summary: プロジェクト検索
      tags: [ Project ]
      parameters:
        - in: query
          name: keyword
          description: 検索キーワード(プロジェクト名 or プロジェクトキー名の部分一致)
          schema:
            type: string
            minLength: 0
            exclusiveMaximum: true
            example: サービス
        - in: query
          name: page
          description: 取得ページ
          required: true
          schema:
            type: integer
            minimum: 1
            exclusiveMaximum: true
            example: 1
        - in: query
          name: limit
          description: 1ページあたりの取得数
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 50
            example: 50
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/searchProjectsResp"
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        404:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        500:
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500InternalServerError"

components:
  schemas:
    # request body schema
    postProjectReq:
      title: postProjectReq
      allOf:
        - $ref: "#/components/schemas/projectReq"

    putProjectReq:
      title: putProjectReq
      allOf:
        - $ref: "#/components/schemas/projectReq"

    projectReq:
      title: projectReq
      type: object
      properties:
        keyName:
          description: プロジェクトキー名
          type: string
          minLength: 1
          maxLength: 10
          example: AJA
        name:
          description: プロジェクト名
          type: string
          minLength: 2
          maxLength: 80
          example: プロジェクトサービス
        leaderID:
          description: プロジェクトリーダーID
          type: string
          format: uuid
          example: 764f14b0-8152-45a1-959c-1ff7ea2e517c
        defaultAssigneeID:
          description: デフォルトタスク担当者ID
          type: string
          format: uuid
          example: 764f14b0-8152-45a1-959c-1ff7ea2e517c

    # response body schema
    postProjectResp:
      title: postProjectResp
      allOf:
        - $ref: "#/components/schemas/projectResp"

    putProjectResp:
      title: putProjectResp
      allOf:
        - $ref: "#/components/schemas/projectResp"

    getProjectByIDResp:
      title: putProjectResp
      allOf:
        - $ref: "#/components/schemas/projectResp"

    getProjectsResp:
      title: getProjectsResp
      type: object
      properties:
        totalCount:
          type: integer
          minimum: 0
          exclusiveMaximum: true
          example: 2
        projects:
          type: array
          items:
            $ref: "#/components/schemas/projectResp"
          example:
            - id: 35494ebc-ef1b-46b5-9c7f-35059feff8b8
              productID: afb71541-0b71-4e03-9fdd-2a64f49e14d2
              groupID: 379064ce-763e-427f-aaab-426f05db116e
              keyName: AJA
              name: プロジェクトサービス
              leaderID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              defaultAssigneeID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              trashedAt: null
              createdAt: 2021-12-24T00:00:00Z
              updatedAt: 2021-12-24T00:00:00Z
            - id: 45494ebc-ef1b-46b5-9c7f-35059feff8b8
              productID: afb71541-0b71-4e03-9fdd-2a64f49e14d2
              groupID: 379064ce-763e-427f-aaab-426f05db116e
              keyName: USER
              name: ユーザーサービス
              leaderID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              defaultAssigneeID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              trashedAt: null
              createdAt: 2021-12-25T00:00:00Z
              updatedAt: 2021-12-25T00:00:00Z

    searchProjectsResp:
      title: searchProjectsResp
      type: object
      properties:
        totalCount:
          type: integer
          minimum: 0
          exclusiveMaximum: true
          example: 2
        projects:
          type: array
          items:
            $ref: "#/components/schemas/projectResp"
          example:
            - id: 35494ebc-ef1b-46b5-9c7f-35059feff8b8
              productID: afb71541-0b71-4e03-9fdd-2a64f49e14d2
              groupID: 379064ce-763e-427f-aaab-426f05db116e
              keyName: AJA
              name: プロジェクトサービス
              leaderID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              defaultAssigneeID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              trashedAt: null
              createdAt: 2021-12-24T00:00:00Z
              updatedAt: 2021-12-24T00:00:00Z
            - id: 45494ebc-ef1b-46b5-9c7f-35059feff8b8
              productID: afb71541-0b71-4e03-9fdd-2a64f49e14d2
              groupID: 379064ce-763e-427f-aaab-426f05db116e
              keyName: USER
              name: ユーザーサービス
              leaderID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              defaultAssigneeID: 764f14b0-8152-45a1-959c-1ff7ea2e517c
              trashedAt: null
              createdAt: 2021-12-25T00:00:00Z
              updatedAt: 2021-12-25T00:00:00Z

    projectResp:
      title: projectResp
      type: object
      properties:
        id:
          description: プロジェクトID
          type: string
          format: uuid
          example: 35494ebc-ef1b-46b5-9c7f-35059feff8b8
        productID:
          description: プロダクトID
          type: string
          format: uuid
          example: afb71541-0b71-4e03-9fdd-2a64f49e14d2
        groupID:
          description: グループID
          type: string
          format: uuid
          example: 379064ce-763e-427f-aaab-426f05db116e
        keyName:
          description: プロジェクトキー名
          type: string
          example: AJA
        name:
          description: プロジェクト名
          type: string
          example: プロジェクトサービス
        leaderID:
          description: プロジェクトリーダーID
          type: string
          format: uuid
          example: 764f14b0-8152-45a1-959c-1ff7ea2e517c
        defaultAssigneeID:
          description: デフォルトタスク担当者ID
          type: string
          format: uuid
          example: 764f14b0-8152-45a1-959c-1ff7ea2e517c
        trashedAt:
          description: 作成日
          type: string
          nullable: true
          example: null
        createdAt:
          description: 作成日
          type: string
          example: 2021-12-24T00:00:00Z
        updatedAt:
          description: 更新日
          type: string
          example: 2021-12-24T00:00:00Z

    # error response body schema
    400BadRequest:
      description: BadRequest
      type: object
      properties:
        error:
          type: string
          enum:
            - InvalidParameter

    404NotFound:
      description: NotFound
      type: object
      properties:
        error:
          type: string
          enum:
            - NotFound

    409Conflict:
      description: Conflict
      type: object
      properties:
        error:
          type: string
          enum:
            - Conflict

    500InternalServerError:
      description: InternalServerError
      type: object
      properties:
        error:
          type: string
          enum:
            - InternalServerError
